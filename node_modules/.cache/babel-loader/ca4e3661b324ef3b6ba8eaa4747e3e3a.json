{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asif/Documents/java/spingproject/reactjs/course/src/components/UpdateCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Container } from 'reactstrap';\nimport { toast } from \"react-toastify\";\nimport Axios from 'axios';\nimport base_url from '../api/bootapi';\n\nconst UpdateCourse = ({\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    alert(match.params.id);\n    preload(match.params.id);\n  }, []);\n\n  const preload = id => {\n    Axios.get(`${base_url}/courses/${id}`).then(response => {\n      console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\" + response.data.title);\n    }).catch(error => {\n      console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\" + error);\n    });\n  };\n\n  const [course, setCourse] = useState({});\n\n  const handleForm = e => {\n    // alert(course.id);\n    e.preventDefault();\n    console.log(course);\n  }; //TODO: work on it\n\n\n  const onSubmit = event => {\n    event.preventDefault(); // setValues({ ...values, error: \"\" });\n    // updateCategory(match.params.categoryId, user._id, token, { name }).then(\n    //   (data) => {\n    //     if (data.error) {\n    //       setValues({ ...values, error: data.error });\n    //     } else {\n    //       setValues({\n    //         ...values,\n    //         name: \"\",\n    //       });\n    //     }\n    //   }\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center my-2\",\n      children: \"Update Course Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleForm,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"userId\",\n          children: \"Course Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"userId\",\n          id: \"userId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"userId\",\n          children: \"Course Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"title\",\n          id: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"userId\",\n          children: \"Course Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          name: \"description\",\n          id: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: onSubmit,\n          children: \"UpdateCourse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateCourse, \"KrnUD+U68sJ1hdVvZk3xfonolf0=\");\n\n_c = UpdateCourse;\nexport default UpdateCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCourse\");","map":{"version":3,"sources":["/home/asif/Documents/java/spingproject/reactjs/course/src/components/UpdateCourse.js"],"names":["React","Fragment","useState","useEffect","Button","Form","FormGroup","Label","Input","FormText","Container","toast","Axios","base_url","UpdateCourse","match","alert","params","id","preload","get","then","response","console","log","data","title","catch","error","course","setCourse","handleForm","e","preventDefault","onSubmit","event"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Container } from 'reactstrap';\nimport { toast } from \"react-toastify\";\nimport Axios from 'axios';\nimport base_url from '../api/bootapi';\n\n\n\nconst UpdateCourse = ({ match }) => {\n\n    useEffect(() => {\n        alert(match.params.id);\n        preload(match.params.id);\n    }, []);\n\n    const preload = (id) => {\n\n        Axios.get(`${base_url}/courses/${id}`).\n        then((response)=>{console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\"+response.data.title);})\n        .catch((error)=>{console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"+error);})\n       \n      };\n\n\n    const [course, setCourse] = useState({})\n    const handleForm = (e) => {\n        // alert(course.id);\n        e.preventDefault();\n        console.log(course)\n    }\n\n //TODO: work on it\n const onSubmit = (event) => {\n    event.preventDefault();\n    \n    // setValues({ ...values, error: \"\" });\n    // updateCategory(match.params.categoryId, user._id, token, { name }).then(\n    //   (data) => {\n    //     if (data.error) {\n    //       setValues({ ...values, error: data.error });\n    //     } else {\n    //       setValues({\n    //         ...values,\n    //         name: \"\",\n    //       });\n    //     }\n    //   }\n    // );\n  };\n\n\n\n\n    return (\n        <Fragment>\n            <h2 className=\"text-center my-2\">Update Course Detail</h2>\n            <Form onSubmit={handleForm}>\n                <FormGroup>\n                    <Label for=\"userId\">Course Id</Label>\n                    <Input type=\"text\" name=\"userId\" id=\"userId\"\n\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"userId\">Course Title</Label>\n                    <Input type=\"text\" name=\"title\" id=\"title\"\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"userId\">Course Description </Label>\n                    <Input type=\"textarea\" name=\"description\" id=\"description\"\n                    />\n                </FormGroup>\n                <Container>\n                    <Button  color=\"success\"onClick={onSubmit} >UpdateCourse</Button>\n                </Container>\n\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default UpdateCourse;"]},"metadata":{},"sourceType":"module"}